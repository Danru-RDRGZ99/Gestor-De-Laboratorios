name: Build Android APK (Flet manual)

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build-apk:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # ---------- Python & Flet ----------
      - name: Setup Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install Python deps + Flet
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install flet==0.28.3

      # Intentamos que Flet genere build/flutter (pero que NUNCA rompa el job)
      - name: Bootstrap with Flet (may fail, continue)
        run: |
          set +e
          flet build apk
          echo "Exit code of 'flet build apk': $?"
          set -e
          # Mostrar qué hay por si alcanzó a crear algo
          ls -la || true
          ls -la build || true
          ls -la build/flutter || true
          ls -la build/app || true

      # Si no quedó el proyecto Flutter, lo creamos desde el template oficial
      - name: Ensure Flutter bootstrap exists
        run: |
          if [ ! -d build/flutter ]; then
            git clone --depth 1 --branch 0.28.3 https://github.com/flet-dev/flet-build-template.git build/flutter
          fi
          test -f build/flutter/pubspec.yaml
          mkdir -p build/flutter/app

      # ---------- Empaquetado manual de la app Python ----------
      - name: Create site-packages
        run: |
          mkdir -p build/site-packages
          # instala libs dentro de build/site-packages (si tienes requirements.txt)
          if [ -f requirements.txt ]; then pip install -r requirements.txt -t build/site-packages; fi

      - name: Zip Python app (app.zip + hash)
        run: |
          # Empaqueta tu código Python en app.zip (excluye basura)
          cd $GITHUB_WORKSPACE
          mkdir -p build/flutter/app
          zip -r build/flutter/app/app.zip . -x ".git/*" ".github/*" "build/*" "__pycache__/*" "*.pyc" ".venv/*"
          # Hash (sha256)
          sha256sum build/flutter/app/app.zip | awk '{print $1}' > build/flutter/app/app.zip.hash
          echo "App zip size:"; ls -lh build/flutter/app/app.zip

      # ---------- Android SDK & Flutter (3.35.6 con Dart 3.9) ----------
      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Android SDK (cmdline-tools + licenses)
        uses: android-actions/setup-android@v3

      - name: Setup Flutter 3.35.6 (Dart 3.9)
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.6'
          channel: 'stable'
          cache: true

      # IMPORTANTE: con Flutter moderno ya NO tenemos el error de Dart 3.7
      - name: Build APK (release) with Flutter 3.35.6
        env:
          SERIOUS_PYTHON_SITE_PACKAGES: ${{ github.workspace }}/build/site-packages
        run: |
          set -eux
          cd build/flutter
          # Asegura que el pubspec declara los assets correctos
          grep -q "app/app.zip" pubspec.yaml
          grep -q "app/app.zip.hash" pubspec.yaml

          flutter clean
          flutter pub get
          flutter build apk --release

          ls -la build/app/outputs/flutter-apk

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: build/flutter/build/app/outputs/flutter-apk/app-release.apk
