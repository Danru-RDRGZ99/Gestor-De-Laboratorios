name: Build Android APK (Flet)

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  android-apk:
    runs-on: ubuntu-latest

    env:
      # Para serious_python (Flet nativo)
      SERIOUS_PYTHON_SITE_PACKAGES: ${{ github.workspace }}/build/site-packages

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Python deps + flet
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install flet==0.28.3

      # Deja que Flet empaquete la app (app.zip, site-packages y build/flutter).
      # Es normal que falle al compilar por su Flutter 3.29.x; lo ignoramos.
      - name: Package with Flet (generate app.zip and flutter project)
        run: |
          flet build apk || true
          test -f build/app/app.zip
          test -d build/flutter
          test -d build/site-packages || mkdir -p build/site-packages
          echo "App empaquetada por Flet. Seguimos con Flutter 3.35.6..."

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Flutter 3.35.6
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.6'
          channel: 'stable'
          cache: true

      # (Best effort) aceptar licencias si est√°n disponibles
      - name: Accept Android SDK licenses (best-effort)
        run: |
          set +e
          if [ -n "$ANDROID_SDK_ROOT" ] && [ -x "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" ]; then
            yes | "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" --licenses
          elif [ -n "$ANDROID_HOME" ] && [ -x "$ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager" ]; then
            yes | "$ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager" --licenses
          else
            echo "sdkmanager no encontrado; continuamos."
          fi
          set -e

      - name: Flutter pub get (in rendered project)
        working-directory: build/flutter
        run: |
          flutter --version
          flutter clean
          flutter pub get

      - name: Build APK (release) with system Flutter
        working-directory: build/flutter
        env:
          SERIOUS_PYTHON_SITE_PACKAGES: ${{ env.SERIOUS_PYTHON_SITE_PACKAGES }}
        run: |
          flutter build apk --release
          ls -la build/app/outputs/flutter-apk

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: build/flutter/build/app/outputs/flutter-apk/app-release.apk
