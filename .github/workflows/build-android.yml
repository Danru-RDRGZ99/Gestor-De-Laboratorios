name: Build Android APK (Flet)

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  android-apk:
    runs-on: ubuntu-latest

    env:
      # Necesario por el plugin serious_python en Android
      SERIOUS_PYTHON_SITE_PACKAGES: ${{ github.workspace }}/build/site-packages

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Python deps + site-packages
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          mkdir -p build/site-packages
          if [ -f requirements.txt ]; then pip install -r requirements.txt -t build/site-packages; fi

      # Renderizamos el bootstrap de Flet 0.28.3 en /tmp/<algo>/flutter y lo movemos a build/flutter
      - name: Render Flet Flutter bootstrap (0.28.3)
        run: |
          pip install cookiecutter
          rm -rf build/flutter
          TMPDIR="$(mktemp -d)"
          cookiecutter \
            --no-input \
            --checkout 0.28.3 \
            --output-dir "$TMPDIR" \
            --extra-context '{"out_dir":"flutter"}' \
            https://github.com/flet-dev/flet-build-template.git
          test -f "$TMPDIR/flutter/pubspec.yaml"
          mkdir -p build
          mv "$TMPDIR/flutter" build/flutter
          mkdir -p build/flutter/app

      - name: Package Python app (app.zip)
        run: |
          zip -r build/flutter/app/app.zip . -x ".git/*" ".github/*" "build/*" "__pycache__/*" "*.pyc" ".venv/*"
          shasum -a 256 build/flutter/app/app.zip | awk '{print $1}' > build/flutter/app/app.zip.hash
          ls -lh build/flutter/app/app.zip build/flutter/app/app.zip.hash

      - name: Setup Flutter 3.35.6
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.6'
          channel: 'stable'
          cache: true

      - name: Flutter pub get
        working-directory: build/flutter
        run: |
          flutter --version
          flutter pub get

      - name: Accept Android SDK licenses (best-effort)
        run: |
          if [ -n "$ANDROID_SDK_ROOT" ] && [ -x "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" ]; then
            yes | "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" --licenses || true
          fi

      - name: Build APK (release)
        working-directory: build/flutter
        env:
          SERIOUS_PYTHON_SITE_PACKAGES: ${{ env.SERIOUS_PYTHON_SITE_PACKAGES }}
        run: |
          flutter build apk --release
          ls -la build/app/outputs/flutter-apk

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: build/flutter/build/app/outputs/flutter-apk/app-release.apk
