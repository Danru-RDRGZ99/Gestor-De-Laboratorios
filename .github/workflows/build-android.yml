name: Build Android APK (Flet 0.28.3 + Flutter 3.29.2)

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  android-apk:
    runs-on: ubuntu-latest

    env:
      SERIOUS_PYTHON_SITE_PACKAGES: ${{ github.workspace }}/build/site-packages

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # --- Python & deps (para empaquetar tu app y serious_python) ---
      - name: Setup Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          mkdir -p build/site-packages
          if [ -f requirements.txt ]; then pip install -r requirements.txt -t build/site-packages; fi

      # --- Limpiar restos previos ---
      - name: Clean previous build dirs
        run: rm -rf build/flutter build/app || true

      # --- Empaquetar con Flet (sin romper si falla) ---
      - name: Install Flet CLI
        run: pip install flet==0.28.3

      - name: Package with Flet (ignore failure)
        run: |
          set +e
          flet build apk
          CODE=$?
          echo "FLET_EXIT_CODE=$CODE (ok si falla por toolchain viejo)"
          set -e

          mkdir -p build/app build/flutter/app

          # Si Flet no dejó app.zip, crearlo manualmente
          if [ ! -f build/app/app.zip ]; then
            echo "Empaquetando app.zip manualmente…"
            zip -r build/app/app.zip . -x ".git/*" ".github/*" "build/*" "__pycache__/*" "*.pyc" ".venv/*"
          fi

          # Hash
          if command -v sha256sum >/dev/null 2>&1; then
            sha256sum build/app/app.zip | awk '{print $1}' > build/app/app.zip.hash
          else
            shasum -a 256 build/app/app.zip | awk '{print $1}' > build/app/app.zip.hash
          fi

          # Copia a la ruta que usa el bootstrap de Flet
          cp -f build/app/app.zip build/flutter/app/app.zip
          cp -f build/app/app.zip.hash build/flutter/app/app.zip.hash || true

          ls -la build/app
          ls -la build/flutter || true
          ls -la build/flutter/app || true

      # --- Flutter 3.29.2 (Dart 3.7) para compilar el APK compatible con Flet 0.28.3 ---
      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Flutter 3.29.2
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.2'
          channel: 'stable'
          cache: true

      # Aceptar licencias Android (best-effort)
      - name: Accept Android SDK licenses
        run: |
          set +e
          if [ -n "$ANDROID_SDK_ROOT" ] && [ -x "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" ]; then
            yes | "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" --licenses || true
          elif [ -n "$ANDROID_HOME" ] && [ -x "$ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager" ]; then
            yes | "$ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager" --licenses || true
          else
            echo "sdkmanager no encontrado; continuamos."
          fi
          set -e

      # Verificación del bootstrap generado por Flet
      - name: Sanity check bootstrap
        run: |
          if [ ! -f build/flutter/pubspec.yaml ]; then
            echo "::error::No existe build/flutter/pubspec.yaml. El paso de Flet no generó el proyecto Flutter."
            ls -la build/flutter || true
            exit 1
          fi

      # --- Parche crítico: fijar webview_flutter_android 4.8.0 para Dart 3.7 ---
      - name: Patch pubspec dependency_overrides
        working-directory: build/flutter
        run: |
          if ! grep -q "^dependency_overrides:" pubspec.yaml; then
            printf "\n\ndependency_overrides:\n  webview_flutter_android: 4.8.0\n" >> pubspec.yaml
          else
            # Si ya existe, asegura 4.8.0
            sed -i 's/webview_flutter_android: .*/webview_flutter_android: 4.8.0/' pubspec.yaml || true
          fi
          echo "==== pubspec.yaml ===="
          cat pubspec.yaml

      - name: Flutter pub get
        working-directory: build/flutter
        run: |
          flutter clean
          flutter pub get

      # --- Build APK release (saltando validaciones de AGP/Kotlin) ---
      - name: Build APK (release)
        working-directory: build/flutter
        env:
          SERIOUS_PYTHON_SITE_PACKAGES: ${{ env.SERIOUS_PYTHON_SITE_PACKAGES }}
        run: |
          flutter build apk --release --android-skip-build-dependency-validation
          ls -la build/app/outputs/flutter-apk

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: build/flutter/build/app/outputs/flutter-apk/app-release.apk
